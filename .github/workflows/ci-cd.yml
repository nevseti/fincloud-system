name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install fastapi uvicorn python-jose[cryptography] passlib[bcrypt] python-multipart sqlalchemy psycopg2-binary alembic pydantic[email] httpx reportlab
    
    - name: Check Python syntax
      run: |
        echo "üîç Checking Python syntax..."
        python -m py_compile auth-service/app/main.py
        python -m py_compile auth-service/app/models.py
        python -m py_compile auth-service/app/schemas.py
        python -m py_compile auth-service/app/auth_utils.py
        python -m py_compile auth-service/app/database.py
        python -m py_compile finance-service/app/main.py
        python -m py_compile finance-service/app/models.py
        python -m py_compile finance-service/app/schemas.py
        python -m py_compile finance-service/app/auth_utils.py
        python -m py_compile finance-service/app/database.py
        python -m py_compile report-service/app/main.py
        echo "‚úÖ Python syntax check passed!"
    
    - name: Check services can start
      run: |
        echo "üîç Checking if services can start..."
        export AUTH_DATABASE_URL="sqlite:///./test_auth.db"
        export FINANCE_DATABASE_URL="sqlite:///./test_finance.db"
        cd auth-service && python -c "from app.main import app; print('‚úÖ Auth service OK')"
        cd ../finance-service && python -c "from app.main import app; print('‚úÖ Finance service OK')"
        cd ../report-service && python -c "from app.main import app; print('‚úÖ Report service OK')"
        echo "‚úÖ All services can start successfully!"
    
    - name: Build Docker images
      run: |
        echo "üê≥ Building Docker images..."
        docker build -t fincloud-auth-service ./auth-service
        docker build -t fincloud-finance-service ./finance-service
        docker build -t fincloud-report-service ./report-service
        docker build -t fincloud-frontend ./frontend
        echo "‚úÖ Docker images built successfully!"
    
    - name: Test Docker Swarm deployment
      run: |
        echo "üê≥ Testing Docker Swarm deployment..."
        docker swarm init --advertise-addr 127.0.0.1 || true
        docker stack deploy -c docker-compose.swarm-simple.yml fincloud-test || true
        sleep 10
        docker stack ls
        docker service ls
        docker stack rm fincloud-test || true
        echo "‚úÖ Docker Swarm deployment test completed!"