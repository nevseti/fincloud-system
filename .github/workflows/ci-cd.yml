name: Simple Check

# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º push –∏ pull request
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
  check:
    runs-on: ubuntu-latest
    
    steps:
    # 1. –°–∫–∞—á–∞—Ç—å –∫–æ–¥
    - name: Get code
      uses: actions/checkout@v4

    # 2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # 3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    - name: Install packages
      run: |
        pip install fastapi uvicorn sqlalchemy psycopg2-binary python-multipart python-jose[cryptography] passlib[bcrypt] python-dotenv email-validator

    # 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∫–æ–¥ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è
    - name: Check Python code
      run: |
        echo "üîç Checking if code compiles..."
        python -m py_compile auth-service/app/main.py
        python -m py_compile finance-service/app/main.py
        python -m py_compile report-service/app/main.py
        echo "‚úÖ All Python files are OK"

    # 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è
    - name: Check services start
      run: |
        echo "üîç Checking if services can start..."
        cd auth-service && python -c "from app.main import app; print('‚úÖ Auth service OK')"
        cd ../finance-service && python -c "from app.main import app; print('‚úÖ Finance service OK')"
        cd ../report-service && python -c "from app.main import app; print('‚úÖ Report service OK')"
        echo "‚úÖ All services can start"

    # 6. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ Docker –æ–±—Ä–∞–∑—ã —Å–æ–±–∏—Ä–∞—é—Ç—Å—è
    - name: Check Docker builds
      run: |
        echo "üîç Checking if Docker images build..."
        docker build -t test-auth ./auth-service
        docker build -t test-finance ./finance-service
        docker build -t test-report ./report-service
        docker build -t test-frontend ./frontend
        echo "‚úÖ All Docker images build successfully"

    # 7. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ Docker Swarm —Ä–∞–±–æ—Ç–∞–µ—Ç
    - name: Check Docker Swarm
      run: |
        echo "üîç Checking if Docker Swarm works..."
        # –ó–∞–ø—É—Å–∫–∞–µ–º Docker Swarm
        docker swarm init --advertise-addr 127.0.0.1 || true
        
        # –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã –¥–ª—è —Ç–µ—Å—Ç–∞
        docker build -t fincloud-auth:test ./auth-service
        docker build -t fincloud-finance:test ./finance-service
        docker build -t fincloud-report:test ./report-service
        docker build -t fincloud-frontend:test ./frontend
        
        # –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å—Ç–µ–∫
        docker stack deploy -c docker-compose.swarm-simple.yml fincloud-test
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
        sleep 10
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å
        docker stack services fincloud-test
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ç–µ–∫
        docker stack rm fincloud-test
        
        echo "‚úÖ Docker Swarm works!"

    # 8. –ì–æ—Ç–æ–≤–æ!
    - name: Success
      run: |
        echo "üéâ Everything works! Your code is good to go!"
