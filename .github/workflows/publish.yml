name: Publish Docker Images

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{ github.repository }}/auth-service
          ghcr.io/${{ github.repository }}/finance-service
          ghcr.io/${{ github.repository }}/report-service
          ghcr.io/${{ github.repository }}/frontend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    # Публикация auth-service
    - name: Build and push auth-service
      uses: docker/build-push-action@v5
      with:
        context: ./auth-service
        push: true
        tags: ghcr.io/${{ github.repository }}/auth-service:${{ github.ref_name }}
        labels: ${{ steps.meta.outputs.labels }}

    # Публикация finance-service
    - name: Build and push finance-service
      uses: docker/build-push-action@v5
      with:
        context: ./finance-service
        push: true
        tags: ghcr.io/${{ github.repository }}/finance-service:${{ github.ref_name }}
        labels: ${{ steps.meta.outputs.labels }}

    # Публикация report-service
    - name: Build and push report-service
      uses: docker/build-push-action@v5
      with:
        context: ./report-service
        push: true
        tags: ghcr.io/${{ github.repository }}/report-service:${{ github.ref_name }}
        labels: ${{ steps.meta.outputs.labels }}

    # Публикация frontend
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate release notes
      run: |
        echo "## 🚀 FinCloud Release ${{ github.ref_name }}" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 📦 Docker Images Published:" >> release-notes.md
        echo "- \`ghcr.io/${{ github.repository }}/auth-service:${{ github.ref_name }}\`" >> release-notes.md
        echo "- \`ghcr.io/${{ github.repository }}/finance-service:${{ github.ref_name }}\`" >> release-notes.md
        echo "- \`ghcr.io/${{ github.repository }}/report-service:${{ github.ref_name }}\`" >> release-notes.md
        echo "- \`ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }}\`" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 🔧 Deployment Commands:" >> release-notes.md
        echo "\`\`\`bash" >> release-notes.md
        echo "# Обновить образы в k8s файлах" >> release-notes.md
        echo "sed -i 's|fincloud-auth:local|ghcr.io/${{ github.repository }}/auth-service:${{ github.ref_name }}|g' k8s/auth.yaml" >> release-notes.md
        echo "sed -i 's|fincloud-finance:local|ghcr.io/${{ github.repository }}/finance-service:${{ github.ref_name }}|g' k8s/finance.yaml" >> release-notes.md
        echo "sed -i 's|fincloud-report:local|ghcr.io/${{ github.repository }}/report-service:${{ github.ref_name }}|g' k8s/report.yaml" >> release-notes.md
        echo "sed -i 's|fincloud-frontend:local|ghcr.io/${{ github.repository }}/frontend:${{ github.ref_name }}|g' k8s/frontend.yaml" >> release-notes.md
        echo "" >> release-notes.md
        echo "# Деплой в Kubernetes" >> release-notes.md
        echo "kubectl apply -f k8s/" >> release-notes.md
        echo "\`\`\`" >> release-notes.md

    - name: Upload release notes
      uses: actions/upload-artifact@v3
      with:
        name: release-notes
        path: release-notes.md
