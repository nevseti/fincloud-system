import sys
import os

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8
sys.stdout.reconfigure(encoding='utf-8')

from app.database import engine, Base
from app.models import User
from app.auth_utils import get_password_hash, verify_password

def test_all():
    try:
        print("1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        from sqlalchemy import text
        with engine.connect() as conn:
            result = conn.execute(text("SELECT version()"))
            version = result.scalar()
            print(f"   ‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω: {version.split(',')[0]}")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print("2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã...")
        Base.metadata.create_all(bind=engine)
        print("   ‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
        print("3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        password = "test123"  # –ö–æ—Ä–æ—Ç–∫–∏–π –ø–∞—Ä–æ–ª—å
        hashed = get_password_hash(password)
        is_valid = verify_password(password, hashed)
        print(f"   ‚úÖ –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {is_valid}")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
        print("4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
        from app import main, schemas, auth_utils
        print("   ‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
        
        print("\nüéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢! Auth-service –≥–æ—Ç–æ–≤!")
        print("üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL")
        print("üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: JWT + bcrypt")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_all()